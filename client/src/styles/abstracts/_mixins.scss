// APPLY DARK/LIGHT THEME COLORS (SEE VARIABLES.SCSS FOR COLORS)
@mixin apply-theme-colors($theme-colors) {
  @each $key, $value in $theme-colors {
    --#{$key}: #{$value};
  }
}

// APPLY A FONT FAMILY (SEE VARIABLES.SCSS FOR FONTS)
@mixin apply-font-family($font) {
  font-family: map.get($font-families, $font);
}

// APPLY A FLEXBOX LAYOUT
@mixin apply-flex($direction, $justify: null, $align: null) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// APPLY MODULAR SCALE: FOR SPACING
// USAGE: "MARGIN", "PADDING", AND "GAP" (SEE VARIABLES.SCSS FOR SCALE)
// Example: @include apply-space("margin", 1, "x"); or @include apply-space("padding-left", 1);
@mixin apply-space($property, $step, $axis: null) {
  $increment: 0.5;
  $value: $base-unit * pow($modular-scale, $step * $increment);

  @if not $axis {
    // Margin and Padding and Gap
    #{$property}: $value;

    // Margin and Padding Axis Only
  } @else if $axis == "x" {
    #{$property}-left: $value;
    #{$property}-right: $value;
  } @else if $axis == "y" {
    #{$property}-top: $value;
    #{$property}-bottom: $value;
  }
}

// APPLY POSITION PROPERTY
@mixin apply-position($position: "static", $top: null, $right: null, $bottom: null, $left: null) {
  position: $position;

  @if $position == "absolute" or $position == "fixed" or $position == "sticky" {
    $properties: (
      "top": $top,
      "right": $right,
      "bottom": $bottom,
      "left": $left
    );

    @each $property, $value in $properties {
      @if $value {
        #{$property}: $value;
      }
    }
  }
}

// APPLY MEDIA QUERY BREAKPOINTS
@mixin respond-to($breakpoint) {
  $raw-query: map.get($breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(meta.type-of($raw-query) == "string",
    string.unquote($raw-query),
    meta.inspect($raw-query));

    @media #{$query} {
      @content;
    }
  } @else {
    @error "No breakpoint found for `#{$breakpoint}`.";
  }
}


