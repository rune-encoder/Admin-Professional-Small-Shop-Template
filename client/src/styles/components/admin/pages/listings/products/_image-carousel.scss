// ==============================
// CONTROLLER: IMAGES EMBLA CAROUSEL
// ==============================
// Usage: Used to create a Embla carousel for the images being viewed, updated, or created.
// Applies cursor styling and adds an incomplete border to the top and bottom of the image slider for a visual effect.
// Container for the images slider.
// Note: This class carries over styles from the `.embla` attribute selector in `carousel.scss`.
.embla__control-images {
  cursor: grab;

  &:active {
    cursor: grabbing;
  }

  &::before {
    @include apply-position(absolute, $top: 0, $left: 50%);
    @extend %pseudo-border;
  }

  &::after {
    @include apply-position(absolute, $bottom: 0, $left: 50%);
    @extend %pseudo-border;
  }
}

// When the Embla carousel is hovered, reduce the width of the border for visual effect.
.embla__control-images:hover {
  &::before {
    width: 85%;
  }

  &::after {
    width: 85%;
  }
}

// CONTROL IMAGE: EACH SLIDE AND SIZE
// Applys changes to the variable slide size for each image in the slider.
// Usage: Used to specify the size of each slide containing the image in the slider and add other styles.
// Note: This class carries over styles from the `.embla__slide` attribute selector in `carousel.scss`.
.embla__slide--control-image {
  // Adjust to change the width of the slide containing the image.
  width: calc(35% - 20px);

  // Keep the height of carousel the same as the rows in listings for visual consistency.
  height: $listings-row-height;
}

// Wrapper for each individual image within the slides in the slider.
// Applies spacing to the image.
.control-image-wrapper {
  @include apply-flex(row, center, center);
  @include apply-space("padding", -5, "y");
  @include apply-space("padding", -10, "x");
}

// Configurations for the images in each slide.
.control-image {
  cursor: pointer;
  transition: all 0.1s ease-out;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
  object-position: center;
  border-radius: $border-radius-md;

  // When the image is hovered, increase the size of the image slightly.
  &:hover {
    @include apply-box-shadow("dark", 10);

    transform: scale(1.05);
  }

  // When the image is clicked, reduce the size of the image slightly.
  &:active {
    transform: scale(1);
  }
}
